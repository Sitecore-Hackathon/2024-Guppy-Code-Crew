---
ID: "941f50c4-9062-494a-a1d3-0378b9792075"
Parent: "24c00bc1-090f-46f4-a16a-bacbe3130a06"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/GuppyCodeCrew/Generate GraphQL Query/Content Editor/Context Menu/Generate GraphQL Query
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Get-GraphQLType
    Import-Function Get-FieldStatements
    
    # Set the item path to the item you want to examine
    #$itemPath = "/sitecore/content/Guppy Code Crew/Hackathon/Data/Cool Banner Folder/CoolBanner"
    #$itemPath = "/sitecore/content/Guppy Code Crew/Hackathon/Home/About Us/Company"
    
    # Get the item
    #$item = Get-Item -Path $itemPath
    $item = Get-Item .
    
    # Get the template of the item
    $templateItem = Get-ItemTemplate -Item $item
    
    # Initialize an array to store field objects
    $fields = @()
    
    # Iterate through all fields of the template
    $templateItem.Fields | Where-Object { $_.Type -ne "Standard Template fields" } | ForEach-Object {
        # Create a custom object for each field
        $fieldObject = [PSCustomObject]@{
            Name = $_.Name
            Type = $_.Type
        }
    
        # Add the field object to the array
        $fields += $fieldObject
    }
    # Define the GraphQL query for item format
    $queryItem = @{
        item = @{
            path = $item.Paths.FullPath
        }
        fields = @{}
    }
    
    # Iterate through all fields of the item
    foreach ($field in $fields) {
        # Get the field type, ignoring __ fields
        if ($field.Name -like "__*") {
            continue
        }
        $fieldType = $field.Type
    
        # Call the new function to add field types to GraphQL query
        $queryItem.fields = Get-GraphQLType -FieldType $fieldType -FieldName $field.Name -QueryItemFields $queryItem.fields
    }
    
    #Generate field structure by type
    $fieldStatements = Get-FieldStatements -QueryItemFields $queryItem.fields
    
    # Define the GraphQL query format
    $graphQLItemQuery = @"
    {
      item(path: "$($queryItem.item.path)", language: "en") {
        id
        name
        template {
          id
          name
        }
        ...on $($templateItem.Name) {
          $fieldStatements
        }
      }
    }
    "@
    
    $ancestorSite = $item.Axes.GetAncestors() | Where-Object { $_.TemplateID -eq "{873173B3-8BE6-410C-AF2B-379088594532}" } | Select-Object -First 1
    $siteName = $ancestorSite.Name
    $route = ($item.Paths.Path -replace "^.*?/$($siteName)/Home?", "").ToLower().Replace(" ", "-")
    $graphQLLayoutQuery = @"
    {
     layout(site: "$siteName", routePath: "$route", language: "en") {
        item {
          rendered
        }
      }
    }
    "@
    
    $description = "GraphQL queries grouped by tabs"
    $title = "Guppy Code Crew GraphQL Generator"
    
    # Check if the item has presentation details
    if ($item."__Renderings") {
        Write-Host "The item has a layout."
        $result = Read-Variable -Parameters `
        @{ Name = "multiText"; Value=$graphQLItemQuery; Title="Copy and Paste Query Below Into Playground or as query"; lines=20; Tooltip="You can put multi line text here"; Tab="Item Query"; Placeholder="You see this when text box is empty"},
    @{ Name = "layoutText"; Value=$graphQLLayoutQuery ; Title="Copy and Paste Query Below Into Playground or as query"; lines=20; Tooltip="You can put multi line text here"; Tab="Layout Query"; Placeholder="You see this when text box is empty"}`
        -Description $description `
        -Title $title -Width 600 -Height 640 -OkButtonName "Close"
    } else {
        Write-Host "The item does not have a layout."
        $result = Read-Variable -Parameters `
        @{ Name = "multiText"; Value=$graphQLItemQuery; Title="Copy and Paste Query Below Into Playground or as query"; lines=20; Tooltip="You can put multi line text here"; Tab="Item Query"; Placeholder="You see this when text box is empty"}`
        -Description $description `
        -Title $title -Width 600 -Height 640 -OkButtonName "Close"
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20240302T031430Z
    - ID: "52807595-0f8f-4b20-8d2a-cb71d28c6103"
      Hint: __Owner
      Value: |
        sitecore\daustin@getfishtank.ca
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\daustin@getfishtank.ca
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "223262ef-14c2-486b-9587-78b55425ecfb"
    - ID: "badd9cf9-53e0-4d0c-bcc0-2d784c282f6a"
      Hint: __Updated by
      Value: |
        sitecore\daustin@getfishtank.ca
    - ID: "d9cf14b1-fa16-4ba6-9288-e8a174d4d522"
      Hint: __Updated
      Value: 20240302T145450Z
